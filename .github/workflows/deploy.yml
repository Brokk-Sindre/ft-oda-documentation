name: Deploy MkDocs to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual workflow runs
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history for git-revision-date-localized plugin
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3

    - name: Validate MkDocs configuration
      run: |
        mkdocs --version
        python -c "import mkdocs; print('MkDocs imported successfully')"
        
    - name: Build MkDocs site
      run: |
        mkdocs build --strict --verbose
      env:
        # Configure site URL for proper asset links
        SITE_URL: ${{ steps.pages.outputs.base_url }}
        
    - name: Verify build output
      run: |
        ls -la site/
        echo "Build completed successfully"

    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: site/

  # Deployment job (only runs on main branch)
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # PR preview job (runs on PRs to validate build)
  pr-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build and validate PR
      run: |
        mkdocs build --strict
        echo "✅ PR build successful - documentation will deploy correctly"

    - name: Comment on PR
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo, number } = context.issue;
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: number,
            body: '✅ **Documentation build successful!** \n\nYour changes will be deployed to GitHub Pages when this PR is merged to `main`.'
          });